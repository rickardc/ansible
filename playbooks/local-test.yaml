---
# Run with ansible-playbook playbooks/local-test.yaml --connection=local
- hosts: 127.0.0.1
  gather_facts: true

  tasks:

    # Update Packages

    # Install Dev tool
    - name: Install zsh
      dnf:
        name: zsh
        state: present
        use_backend: dnf4
      become: true

    - name: Install neofetch
      dnf:
        name: neofetch
        state: present
        use_backend: dnf4
      become: true

    # Check if Miniconda is installed
    - name: Check if Miniconda is installed
      stat:
        path: "{{ ansible_env.HOME }}/miniconda3/bin/conda"
      register: miniconda_installed
      become: true

    # Install Miniconda
    - name: Install Miniconda
      when: miniconda_installed.stat.exists == false
      block:
        - name: Create Miniconda directory
          file:
            path: "{{ ansible_env.HOME }}/miniconda3"
            state: directory
          become: true

        - name: Download Miniconda installer
          get_url:
            url: "https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"
            dest: "{{ ansible_env.HOME }}/miniconda3/miniconda.sh"
          become: true

        - name: Run Miniconda installer
          command: "bash {{ ansible_env.HOME }}/miniconda3/miniconda.sh -b -u -p {{ ansible_env.HOME }}/miniconda3"
          args:
            creates: "{{ ansible_env.HOME }}/miniconda3/bin/conda"
          become: true

        - name: Clean up Miniconda installer
          file:
            path: "{{ ansible_env.HOME }}/miniconda3/miniconda.sh"
            state: absent
          become: true

    - name: Initialize Miniconda
      when: miniconda_installed.stat.exists == false
      block:
        - name: Initialize Miniconda for bash shell
          shell: "{{ ansible_env.HOME }}/miniconda3/bin/activate"
          become: true
          
        - name: Initialize Miniconda for zsh shell
          shell: "{{ ansible_env.HOME }}/miniconda3/bin/activate"
          become: true
    
    - name: Install github
      dnf:
        name: gh
        state: present
        use_backend: dnf4
      become: true
    
    - name: Install vs code
      dnf:
        name: gh
        state: present
        use_backend: dnf4
      become: true

  # vs code

    # Check if Visual Studio Code is installed
    - name: Check if Visual Studio Code is installed
      command: "rpm -q code"
      register: code_installed
      ignore_errors: yes
      become: true

    # Install Visual Studio Code if it's not already installed
    - name: Install Visual Studio Code
      block:
        - name: Import Microsoft GPG key
          shell: "sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc"
          become: true

        - name: Create Visual Studio Code repository file
          shell: 'sudo sh -c "echo -e \"[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc\" > /etc/yum.repos.d/vscode.repo"'
          become: true

        - name: Update package cache
          dnf:
            name: '*'
            state: latest
          become: true

        - name: Install Visual Studio Code
          dnf:
            name: code
            state: present
          become: true
      when: code_installed.rc != 0

    # Display message if Visual Studio Code is already installed
    - name: Display message if Visual Studio Code is already installed
      debug:
        msg: "Visual Studio Code is already installed"
      when: code_installed.rc == 0



  # docker

    # Check if Docker is installed
    - name: Check if Docker is installed
      command: "rpm -q docker-ce"
      register: docker_installed
      ignore_errors: true
      become: true

    # Install Docker if it's not already installed
    - name: Install Docker
      block:
        - name: Install dnf-plugins-core
          dnf:
            name: dnf-plugins-core
            state: present
          become: true

        - name: Add Docker repository
          shell: "sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo"
          become: true

        - name: Install Docker
          dnf:
            name: docker-ce, docker-ce-cli, containerd.io, docker-buildx-plugin, docker-compose-plugin
            state: present
          become: true
      when: docker_installed.rc != 0

    # Display message if Docker is already installed
    - name: Display message if Docker is already installed
      debug:
        msg: "Docker is already installed"
      when: docker_installed.rc == 0

    # Check if Docker Desktop is installed
    - name: Check if Docker Desktop is installed
      stat:
        path: "/usr/local/bin/com.docker.cli"
      register: docker_desktop_installed
      become: true

    # Install Docker Desktop if it's not already installed
    - name: Install Docker Desktop
      block:
        - name: Set up Docker's package repository
          shell: "sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo"
          become: true

        - name: Download Docker Desktop RPM package
          get_url:
            url: "https://desktop.docker.com/linux/main/amd64/145265/docker-desktop-4.29.0-x86_64.rpm"
            dest: "/tmp/docker-desktop.rpm"
          become: true
          vars:
            docker_desktop_version: "latest"  # Specify version if needed
            docker_desktop_arch: "x86_64"     # Specify architecture if needed

        - name: Install Docker Desktop
          dnf:
            name: "/tmp/docker-desktop.rpm"
            state: present
            disable_gpg_check: yes  # Disable GPG signature check
          become: true

    # Display message if Docker Desktop is already installed
    - name: Display message if Docker Desktop is already installed
      debug:
        msg: "Docker Desktop is already installed"
      when: docker_desktop_installed.stat.exists == true


  # steam

  # pcsx2

  # duckstation

  # discord

  # obsidian

  # signal
    - name: Install Discord
      dnf:
        name: discord
        state: present
        use_backend: dnf4
      become: true
